the 2-matrix_divided module test module using "matrix_divided" function

======================================================================

import function from module:

>>> matrix_divided = __import__("2-matrix_divided").matrix_divided

test matrix of int and int div:

>>> matrix_divided([[1, 2],[3, 4]], 5)
    [[0.2, 0.4], [0.6, 0.8]]

test matrix of float and int div:

>>> matrix_divided([[1.3, 2.5],[3.4, 4.5]], 5)
    [[0.26, 0.5], [0.68, 0.9]]

test matrix of int and float div:

>>> matrix_divided([[1, 2],[3, 4]], 5.3)
    [[0.19, 0.38], [0.57, 0.75]]

test matrix of float and float div:

>>> matrix_divided([[1.3, 2.5],[3.4, 4.5]], 5.2)
    [[0.25, 0.48], [0.65, 0.87]]

test matrix of int(different size) and int div:

>>> matrix_divided([[1, 2, 4],[3, 4]], 5)
    Traceback (most recent call last):
    ...
    TypeError: Each row of the matrix must have the same size

test matrix of other data type and int div:

>>> matrix_divided([['a', "hello"],[3, 4]], 5)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

test matrix of int and div = 0:

>>> matrix_divided([[4, 5],[77, 4]], 0)
    Traceback (most recent call last):
    ...
    decimal.DivisionByZero: division by zero

test matrix of int and int div = other type:

>>> matrix_divided([[4, 5],[77, 4]], '6')
    Traceback (most recent call last):
    ...
    TypeError: div must be a number
